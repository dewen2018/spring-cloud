server:
  port: 8000
  servlet:
    context-path: /apiCustomer
spring:
  application:
    name: api-customer
  profiles:
    active: dev
  cloud:
    nacos:
      username: nacos
      password: nacos
      server-addr: 127.0.0.1:8848
      namespace: 5f164af6-f960-4c6a-8dc4-0f6e513dc358
      config:
        server-addr:
        namespace: 5f164af6-f960-4c6a-8dc4-0f6e513dc358
        # 配置文件分组，如果不写，默认值为 DEFAULT_GROUP
        group: cloud-nacos
        # 配置文件前缀，如果不写，默认为应用程序名称，即spring.application.name
        prefix: api-customer
        # 配置文件后缀，如果不写，默认值为 properties，nacos 2.0以后支持的格式有很多，具体参考配置中心
        file-extension: yaml
        enabled: true
        refresh-enabled: true
        # enable-remote-sync-config: true
        # 主配置 最大重试次数
        max-retry: 3
        # 主配置 重试时间
        config-retry-time: 2000
        # 共享配置, 可以把公共配置放在同个命名空间下，然后创建一个 common.yml 文件 ，里面可以放共用的配置
        # shared-configs: common.yml
      discovery:
        enabled: true
        register-enabled: true
        namespace: 5f164af6-f960-4c6a-8dc4-0f6e513dc358
        group: cloud-nacos

feign:
  client:
    config:
      default:
        loggerLevel: FULL
  httpclient:
    # 开启 httpclient
    enabled: true

dubbo:
  application:
    name: ${spring.application.name}
  protocol:
    # 这个dubbo的协议端口在一台服务器上的时候，每个项目的必须配置成不一样的（否则将启动失败），或者配置为-1，使用随机端口
    port: -1
    name: dubbo
  registry:
    id: ${spring.application.name}
    address: nacos://localhost:8848
    username: ${spring.cloud.nacos.username}
    password: ${spring.cloud.nacos.password}
    check: false
  cloud:
    # 订阅的提供者名称
    subscribed-services: api-provider
  scan:
    # 配置需要扫描的注解包
    base-packages: com.dewen
  config-center:
    namespace: ${spring.cloud.nacos.namespace}
    username: ${spring.cloud.nacos.username}
  consumer:
    check: false

